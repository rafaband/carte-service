plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'org.graalvm.buildtools.native' version '0.9.27'
	id "com.gorylenko.gradle-git-properties" version "2.4.1"
}

group = 'br.com.fechaki'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_17
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2022.0.4")
	set('mapstructVersion', "1.5.5.Final")
	set('lombokMapstructBindingVersion', "0.2.0")
	set('jacksonDatabindVersion', "2.15.2")
	set('springdocVersion', "2.2.0")
}

springBoot {
	buildInfo()
}

dependencies {
	implementation "org.springdoc:springdoc-openapi-starter-webflux-api:${springdocVersion}"
	implementation "org.springdoc:springdoc-openapi-starter-webflux-ui:${springdocVersion}"
	implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonDatabindVersion}"
	implementation "org.springframework.boot:spring-boot-starter-data-mongodb-reactive"
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springframework.cloud:spring-cloud-starter-config"
	implementation "org.springframework.boot:spring-boot-starter-hateoas"
	implementation "org.springframework.boot:spring-boot-starter-webflux"
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"

	compileOnly 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor 'org.projectlombok:lombok'

	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.testcontainers:mongodb'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

compileJava {
	options.compilerArgs += [
			'-Amapstruct.defaultComponentModel=default'
	]
}

tasks.named('test') {
	useJUnitPlatform()
}

gitProperties {
	keys = [
			'git.branch',
			'git.commit.id',
			'git.commit.user.email',
			'git.commit.user.name',
			'git.commit.time',
			'git.build.version',
			'git.tags'
	]
}